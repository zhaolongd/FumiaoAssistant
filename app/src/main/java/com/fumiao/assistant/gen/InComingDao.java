package com.fumiao.assistant.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.fumiao.assistant.bean.home.InComing;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "IN_COMING".
*/
public class InComingDao extends AbstractDao<InComing, Long> {

    public static final String TABLENAME = "IN_COMING";

    /**
     * Properties of entity InComing.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Cate_id = new Property(1, String.class, "cate_id", false, "CATE_ID");
        public final static Property Cate_name = new Property(2, String.class, "cate_name", false, "CATE_NAME");
        public final static Property MecDisNm = new Property(3, String.class, "mecDisNm", false, "MEC_DIS_NM");
        public final static Property MblNo = new Property(4, String.class, "mblNo", false, "MBL_NO");
        public final static Property WxQrcodeList = new Property(5, String.class, "wxQrcodeList", false, "WX_QRCODE_LIST");
        public final static Property AliQrcodeList = new Property(6, String.class, "aliQrcodeList", false, "ALI_QRCODE_LIST");
        public final static Property ThousandQrcodeList = new Property(7, String.class, "thousandQrcodeList", false, "THOUSAND_QRCODE_LIST");
        public final static Property HighestQrcodeList = new Property(8, String.class, "highestQrcodeList", false, "HIGHEST_QRCODE_LIST");
        public final static Property CprRegAddr = new Property(9, String.class, "cprRegAddr", false, "CPR_REG_ADDR");
        public final static Property RegProvCd = new Property(10, String.class, "regProvCd", false, "REG_PROV_CD");
        public final static Property RegCityCd = new Property(11, String.class, "regCityCd", false, "REG_CITY_CD");
        public final static Property RegDistCd = new Property(12, String.class, "regDistCd", false, "REG_DIST_CD");
        public final static Property ActNm = new Property(13, String.class, "actNm", false, "ACT_NM");
        public final static Property StmManIdNo = new Property(14, String.class, "stmManIdNo", false, "STM_MAN_ID_NO");
        public final static Property ActNo = new Property(15, String.class, "actNo", false, "ACT_NO");
        public final static Property LbnkNo = new Property(16, String.class, "lbnkNo", false, "LBNK_NO");
        public final static Property LbnkNm = new Property(17, String.class, "lbnkNm", false, "LBNK_NM");
        public final static Property LegalPersonidPositivePic = new Property(18, String.class, "legalPersonidPositivePic", false, "LEGAL_PERSONID_POSITIVE_PIC");
        public final static Property LegalPersonidOppositePic = new Property(19, String.class, "legalPersonidOppositePic", false, "LEGAL_PERSONID_OPPOSITE_PIC");
        public final static Property BankCardPositivePic = new Property(20, String.class, "bankCardPositivePic", false, "BANK_CARD_POSITIVE_PIC");
        public final static Property BankCardOppositePic = new Property(21, String.class, "bankCardOppositePic", false, "BANK_CARD_OPPOSITE_PIC");
        public final static Property StorePic = new Property(22, String.class, "storePic", false, "STORE_PIC");
        public final static Property BusinessPlacePic = new Property(23, String.class, "businessPlacePic", false, "BUSINESS_PLACE_PIC");
        public final static Property InsideScenePic = new Property(24, String.class, "insideScenePic", false, "INSIDE_SCENE_PIC");
        public final static Property RegProv = new Property(25, String.class, "regProv", false, "REG_PROV");
        public final static Property RegCity = new Property(26, String.class, "regCity", false, "REG_CITY");
        public final static Property RegDist = new Property(27, String.class, "regDist", false, "REG_DIST");
        public final static Property LegalPersonidPositiveLoadPic = new Property(28, String.class, "legalPersonidPositiveLoadPic", false, "LEGAL_PERSONID_POSITIVE_LOAD_PIC");
        public final static Property LegalPersonidOppositeLoadPic = new Property(29, String.class, "legalPersonidOppositeLoadPic", false, "LEGAL_PERSONID_OPPOSITE_LOAD_PIC");
        public final static Property BankCardPositiveLoadPic = new Property(30, String.class, "bankCardPositiveLoadPic", false, "BANK_CARD_POSITIVE_LOAD_PIC");
        public final static Property BankCardOppositeLoadPic = new Property(31, String.class, "bankCardOppositeLoadPic", false, "BANK_CARD_OPPOSITE_LOAD_PIC");
        public final static Property StoreLoadPic = new Property(32, String.class, "storeLoadPic", false, "STORE_LOAD_PIC");
        public final static Property BusinessPlaceLoadPic = new Property(33, String.class, "businessPlaceLoadPic", false, "BUSINESS_PLACE_LOAD_PIC");
        public final static Property InsideSceneLoadPic = new Property(34, String.class, "insideSceneLoadPic", false, "INSIDE_SCENE_LOAD_PIC");
        public final static Property SettlePersonIdcardLoadPositive = new Property(35, String.class, "settlePersonIdcardLoadPositive", false, "SETTLE_PERSON_IDCARD_LOAD_POSITIVE");
        public final static Property SettlePersonIdcardLoadOpposite = new Property(36, String.class, "settlePersonIdcardLoadOpposite", false, "SETTLE_PERSON_IDCARD_LOAD_OPPOSITE");
        public final static Property BankCode = new Property(37, String.class, "bankCode", false, "BANK_CODE");
        public final static Property BankName = new Property(38, String.class, "bankName", false, "BANK_NAME");
        public final static Property BankCityCode = new Property(39, String.class, "bankCityCode", false, "BANK_CITY_CODE");
        public final static Property BankCityName = new Property(40, String.class, "bankCityName", false, "BANK_CITY_NAME");
        public final static Property CreateTime = new Property(41, String.class, "createTime", false, "CREATE_TIME");
        public final static Property Status = new Property(42, int.class, "status", false, "STATUS");
        public final static Property Failure_msg = new Property(43, String.class, "failure_msg", false, "FAILURE_MSG");
        public final static Property LicenseLoadPic = new Property(44, String.class, "licenseLoadPic", false, "LICENSE_LOAD_PIC");
        public final static Property OpeningAccountLicenseLoadPic = new Property(45, String.class, "openingAccountLicenseLoadPic", false, "OPENING_ACCOUNT_LICENSE_LOAD_PIC");
        public final static Property LetterOfAuthPicLoadPic = new Property(46, String.class, "letterOfAuthPicLoadPic", false, "LETTER_OF_AUTH_PIC_LOAD_PIC");
        public final static Property Merchant_id = new Property(47, String.class, "merchant_id", false, "MERCHANT_ID");
        public final static Property Member_id = new Property(48, String.class, "member_id", false, "MEMBER_ID");
        public final static Property Merchant_name = new Property(49, String.class, "merchant_name", false, "MERCHANT_NAME");
        public final static Property Store_id = new Property(50, String.class, "store_id", false, "STORE_ID");
        public final static Property Incoming_parts_id = new Property(51, String.class, "incoming_parts_id", false, "INCOMING_PARTS_ID");
        public final static Property Merchant_type = new Property(52, String.class, "merchant_type", false, "MERCHANT_TYPE");
        public final static Property LicensePic = new Property(53, String.class, "licensePic", false, "LICENSE_PIC");
        public final static Property CprRegNmCn = new Property(54, String.class, "cprRegNmCn", false, "CPR_REG_NM_CN");
        public final static Property RegistCode = new Property(55, String.class, "registCode", false, "REGIST_CODE");
        public final static Property MccCd = new Property(56, String.class, "mccCd", false, "MCC_CD");
        public final static Property Mcc_name = new Property(57, String.class, "mcc_name", false, "MCC_NAME");
        public final static Property IdentityName = new Property(58, String.class, "identityName", false, "IDENTITY_NAME");
        public final static Property IdentityTyp = new Property(59, String.class, "identityTyp", false, "IDENTITY_TYP");
        public final static Property IdentityNo = new Property(60, String.class, "identityNo", false, "IDENTITY_NO");
        public final static Property HaveLicenceNo = new Property(61, String.class, "haveLicenceNo", false, "HAVE_LICENCE_NO");
        public final static Property IsHaveLicence = new Property(62, boolean.class, "isHaveLicence", false, "IS_HAVE_LICENCE");
        public final static Property ActTyp = new Property(63, String.class, "actTyp", false, "ACT_TYP");
        public final static Property SettleType = new Property(64, String.class, "settleType", false, "SETTLE_TYPE");
        public final static Property People_type = new Property(65, int.class, "people_type", false, "PEOPLE_TYPE");
        public final static Property OpeningAccountLicensePic = new Property(66, String.class, "openingAccountLicensePic", false, "OPENING_ACCOUNT_LICENSE_PIC");
        public final static Property LetterOfAuthPic = new Property(67, String.class, "letterOfAuthPic", false, "LETTER_OF_AUTH_PIC");
        public final static Property SettlePersonIdcardPositive = new Property(68, String.class, "settlePersonIdcardPositive", false, "SETTLE_PERSON_IDCARD_POSITIVE");
        public final static Property SettlePersonIdcardOpposite = new Property(69, String.class, "settlePersonIdcardOpposite", false, "SETTLE_PERSON_IDCARD_OPPOSITE");
        public final static Property IsBusinessComplete = new Property(70, boolean.class, "isBusinessComplete", false, "IS_BUSINESS_COMPLETE");
        public final static Property IsMerchantComplete = new Property(71, boolean.class, "isMerchantComplete", false, "IS_MERCHANT_COMPLETE");
        public final static Property IsSettlementComplete = new Property(72, boolean.class, "isSettlementComplete", false, "IS_SETTLEMENT_COMPLETE");
        public final static Property IsRateComplete = new Property(73, boolean.class, "isRateComplete", false, "IS_RATE_COMPLETE");
    }


    public InComingDao(DaoConfig config) {
        super(config);
    }
    
    public InComingDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"IN_COMING\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"CATE_ID\" TEXT," + // 1: cate_id
                "\"CATE_NAME\" TEXT," + // 2: cate_name
                "\"MEC_DIS_NM\" TEXT," + // 3: mecDisNm
                "\"MBL_NO\" TEXT," + // 4: mblNo
                "\"WX_QRCODE_LIST\" TEXT," + // 5: wxQrcodeList
                "\"ALI_QRCODE_LIST\" TEXT," + // 6: aliQrcodeList
                "\"THOUSAND_QRCODE_LIST\" TEXT," + // 7: thousandQrcodeList
                "\"HIGHEST_QRCODE_LIST\" TEXT," + // 8: highestQrcodeList
                "\"CPR_REG_ADDR\" TEXT," + // 9: cprRegAddr
                "\"REG_PROV_CD\" TEXT," + // 10: regProvCd
                "\"REG_CITY_CD\" TEXT," + // 11: regCityCd
                "\"REG_DIST_CD\" TEXT," + // 12: regDistCd
                "\"ACT_NM\" TEXT," + // 13: actNm
                "\"STM_MAN_ID_NO\" TEXT," + // 14: stmManIdNo
                "\"ACT_NO\" TEXT," + // 15: actNo
                "\"LBNK_NO\" TEXT," + // 16: lbnkNo
                "\"LBNK_NM\" TEXT," + // 17: lbnkNm
                "\"LEGAL_PERSONID_POSITIVE_PIC\" TEXT," + // 18: legalPersonidPositivePic
                "\"LEGAL_PERSONID_OPPOSITE_PIC\" TEXT," + // 19: legalPersonidOppositePic
                "\"BANK_CARD_POSITIVE_PIC\" TEXT," + // 20: bankCardPositivePic
                "\"BANK_CARD_OPPOSITE_PIC\" TEXT," + // 21: bankCardOppositePic
                "\"STORE_PIC\" TEXT," + // 22: storePic
                "\"BUSINESS_PLACE_PIC\" TEXT," + // 23: businessPlacePic
                "\"INSIDE_SCENE_PIC\" TEXT," + // 24: insideScenePic
                "\"REG_PROV\" TEXT," + // 25: regProv
                "\"REG_CITY\" TEXT," + // 26: regCity
                "\"REG_DIST\" TEXT," + // 27: regDist
                "\"LEGAL_PERSONID_POSITIVE_LOAD_PIC\" TEXT," + // 28: legalPersonidPositiveLoadPic
                "\"LEGAL_PERSONID_OPPOSITE_LOAD_PIC\" TEXT," + // 29: legalPersonidOppositeLoadPic
                "\"BANK_CARD_POSITIVE_LOAD_PIC\" TEXT," + // 30: bankCardPositiveLoadPic
                "\"BANK_CARD_OPPOSITE_LOAD_PIC\" TEXT," + // 31: bankCardOppositeLoadPic
                "\"STORE_LOAD_PIC\" TEXT," + // 32: storeLoadPic
                "\"BUSINESS_PLACE_LOAD_PIC\" TEXT," + // 33: businessPlaceLoadPic
                "\"INSIDE_SCENE_LOAD_PIC\" TEXT," + // 34: insideSceneLoadPic
                "\"SETTLE_PERSON_IDCARD_LOAD_POSITIVE\" TEXT," + // 35: settlePersonIdcardLoadPositive
                "\"SETTLE_PERSON_IDCARD_LOAD_OPPOSITE\" TEXT," + // 36: settlePersonIdcardLoadOpposite
                "\"BANK_CODE\" TEXT," + // 37: bankCode
                "\"BANK_NAME\" TEXT," + // 38: bankName
                "\"BANK_CITY_CODE\" TEXT," + // 39: bankCityCode
                "\"BANK_CITY_NAME\" TEXT," + // 40: bankCityName
                "\"CREATE_TIME\" TEXT," + // 41: createTime
                "\"STATUS\" INTEGER NOT NULL ," + // 42: status
                "\"FAILURE_MSG\" TEXT," + // 43: failure_msg
                "\"LICENSE_LOAD_PIC\" TEXT," + // 44: licenseLoadPic
                "\"OPENING_ACCOUNT_LICENSE_LOAD_PIC\" TEXT," + // 45: openingAccountLicenseLoadPic
                "\"LETTER_OF_AUTH_PIC_LOAD_PIC\" TEXT," + // 46: letterOfAuthPicLoadPic
                "\"MERCHANT_ID\" TEXT," + // 47: merchant_id
                "\"MEMBER_ID\" TEXT," + // 48: member_id
                "\"MERCHANT_NAME\" TEXT," + // 49: merchant_name
                "\"STORE_ID\" TEXT," + // 50: store_id
                "\"INCOMING_PARTS_ID\" TEXT," + // 51: incoming_parts_id
                "\"MERCHANT_TYPE\" TEXT," + // 52: merchant_type
                "\"LICENSE_PIC\" TEXT," + // 53: licensePic
                "\"CPR_REG_NM_CN\" TEXT," + // 54: cprRegNmCn
                "\"REGIST_CODE\" TEXT," + // 55: registCode
                "\"MCC_CD\" TEXT," + // 56: mccCd
                "\"MCC_NAME\" TEXT," + // 57: mcc_name
                "\"IDENTITY_NAME\" TEXT," + // 58: identityName
                "\"IDENTITY_TYP\" TEXT," + // 59: identityTyp
                "\"IDENTITY_NO\" TEXT," + // 60: identityNo
                "\"HAVE_LICENCE_NO\" TEXT," + // 61: haveLicenceNo
                "\"IS_HAVE_LICENCE\" INTEGER NOT NULL ," + // 62: isHaveLicence
                "\"ACT_TYP\" TEXT," + // 63: actTyp
                "\"SETTLE_TYPE\" TEXT," + // 64: settleType
                "\"PEOPLE_TYPE\" INTEGER NOT NULL ," + // 65: people_type
                "\"OPENING_ACCOUNT_LICENSE_PIC\" TEXT," + // 66: openingAccountLicensePic
                "\"LETTER_OF_AUTH_PIC\" TEXT," + // 67: letterOfAuthPic
                "\"SETTLE_PERSON_IDCARD_POSITIVE\" TEXT," + // 68: settlePersonIdcardPositive
                "\"SETTLE_PERSON_IDCARD_OPPOSITE\" TEXT," + // 69: settlePersonIdcardOpposite
                "\"IS_BUSINESS_COMPLETE\" INTEGER NOT NULL ," + // 70: isBusinessComplete
                "\"IS_MERCHANT_COMPLETE\" INTEGER NOT NULL ," + // 71: isMerchantComplete
                "\"IS_SETTLEMENT_COMPLETE\" INTEGER NOT NULL ," + // 72: isSettlementComplete
                "\"IS_RATE_COMPLETE\" INTEGER NOT NULL );"); // 73: isRateComplete
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"IN_COMING\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, InComing entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String cate_id = entity.getCate_id();
        if (cate_id != null) {
            stmt.bindString(2, cate_id);
        }
 
        String cate_name = entity.getCate_name();
        if (cate_name != null) {
            stmt.bindString(3, cate_name);
        }
 
        String mecDisNm = entity.getMecDisNm();
        if (mecDisNm != null) {
            stmt.bindString(4, mecDisNm);
        }
 
        String mblNo = entity.getMblNo();
        if (mblNo != null) {
            stmt.bindString(5, mblNo);
        }
 
        String wxQrcodeList = entity.getWxQrcodeList();
        if (wxQrcodeList != null) {
            stmt.bindString(6, wxQrcodeList);
        }
 
        String aliQrcodeList = entity.getAliQrcodeList();
        if (aliQrcodeList != null) {
            stmt.bindString(7, aliQrcodeList);
        }
 
        String thousandQrcodeList = entity.getThousandQrcodeList();
        if (thousandQrcodeList != null) {
            stmt.bindString(8, thousandQrcodeList);
        }
 
        String highestQrcodeList = entity.getHighestQrcodeList();
        if (highestQrcodeList != null) {
            stmt.bindString(9, highestQrcodeList);
        }
 
        String cprRegAddr = entity.getCprRegAddr();
        if (cprRegAddr != null) {
            stmt.bindString(10, cprRegAddr);
        }
 
        String regProvCd = entity.getRegProvCd();
        if (regProvCd != null) {
            stmt.bindString(11, regProvCd);
        }
 
        String regCityCd = entity.getRegCityCd();
        if (regCityCd != null) {
            stmt.bindString(12, regCityCd);
        }
 
        String regDistCd = entity.getRegDistCd();
        if (regDistCd != null) {
            stmt.bindString(13, regDistCd);
        }
 
        String actNm = entity.getActNm();
        if (actNm != null) {
            stmt.bindString(14, actNm);
        }
 
        String stmManIdNo = entity.getStmManIdNo();
        if (stmManIdNo != null) {
            stmt.bindString(15, stmManIdNo);
        }
 
        String actNo = entity.getActNo();
        if (actNo != null) {
            stmt.bindString(16, actNo);
        }
 
        String lbnkNo = entity.getLbnkNo();
        if (lbnkNo != null) {
            stmt.bindString(17, lbnkNo);
        }
 
        String lbnkNm = entity.getLbnkNm();
        if (lbnkNm != null) {
            stmt.bindString(18, lbnkNm);
        }
 
        String legalPersonidPositivePic = entity.getLegalPersonidPositivePic();
        if (legalPersonidPositivePic != null) {
            stmt.bindString(19, legalPersonidPositivePic);
        }
 
        String legalPersonidOppositePic = entity.getLegalPersonidOppositePic();
        if (legalPersonidOppositePic != null) {
            stmt.bindString(20, legalPersonidOppositePic);
        }
 
        String bankCardPositivePic = entity.getBankCardPositivePic();
        if (bankCardPositivePic != null) {
            stmt.bindString(21, bankCardPositivePic);
        }
 
        String bankCardOppositePic = entity.getBankCardOppositePic();
        if (bankCardOppositePic != null) {
            stmt.bindString(22, bankCardOppositePic);
        }
 
        String storePic = entity.getStorePic();
        if (storePic != null) {
            stmt.bindString(23, storePic);
        }
 
        String businessPlacePic = entity.getBusinessPlacePic();
        if (businessPlacePic != null) {
            stmt.bindString(24, businessPlacePic);
        }
 
        String insideScenePic = entity.getInsideScenePic();
        if (insideScenePic != null) {
            stmt.bindString(25, insideScenePic);
        }
 
        String regProv = entity.getRegProv();
        if (regProv != null) {
            stmt.bindString(26, regProv);
        }
 
        String regCity = entity.getRegCity();
        if (regCity != null) {
            stmt.bindString(27, regCity);
        }
 
        String regDist = entity.getRegDist();
        if (regDist != null) {
            stmt.bindString(28, regDist);
        }
 
        String legalPersonidPositiveLoadPic = entity.getLegalPersonidPositiveLoadPic();
        if (legalPersonidPositiveLoadPic != null) {
            stmt.bindString(29, legalPersonidPositiveLoadPic);
        }
 
        String legalPersonidOppositeLoadPic = entity.getLegalPersonidOppositeLoadPic();
        if (legalPersonidOppositeLoadPic != null) {
            stmt.bindString(30, legalPersonidOppositeLoadPic);
        }
 
        String bankCardPositiveLoadPic = entity.getBankCardPositiveLoadPic();
        if (bankCardPositiveLoadPic != null) {
            stmt.bindString(31, bankCardPositiveLoadPic);
        }
 
        String bankCardOppositeLoadPic = entity.getBankCardOppositeLoadPic();
        if (bankCardOppositeLoadPic != null) {
            stmt.bindString(32, bankCardOppositeLoadPic);
        }
 
        String storeLoadPic = entity.getStoreLoadPic();
        if (storeLoadPic != null) {
            stmt.bindString(33, storeLoadPic);
        }
 
        String businessPlaceLoadPic = entity.getBusinessPlaceLoadPic();
        if (businessPlaceLoadPic != null) {
            stmt.bindString(34, businessPlaceLoadPic);
        }
 
        String insideSceneLoadPic = entity.getInsideSceneLoadPic();
        if (insideSceneLoadPic != null) {
            stmt.bindString(35, insideSceneLoadPic);
        }
 
        String settlePersonIdcardLoadPositive = entity.getSettlePersonIdcardLoadPositive();
        if (settlePersonIdcardLoadPositive != null) {
            stmt.bindString(36, settlePersonIdcardLoadPositive);
        }
 
        String settlePersonIdcardLoadOpposite = entity.getSettlePersonIdcardLoadOpposite();
        if (settlePersonIdcardLoadOpposite != null) {
            stmt.bindString(37, settlePersonIdcardLoadOpposite);
        }
 
        String bankCode = entity.getBankCode();
        if (bankCode != null) {
            stmt.bindString(38, bankCode);
        }
 
        String bankName = entity.getBankName();
        if (bankName != null) {
            stmt.bindString(39, bankName);
        }
 
        String bankCityCode = entity.getBankCityCode();
        if (bankCityCode != null) {
            stmt.bindString(40, bankCityCode);
        }
 
        String bankCityName = entity.getBankCityName();
        if (bankCityName != null) {
            stmt.bindString(41, bankCityName);
        }
 
        String createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindString(42, createTime);
        }
        stmt.bindLong(43, entity.getStatus());
 
        String failure_msg = entity.getFailure_msg();
        if (failure_msg != null) {
            stmt.bindString(44, failure_msg);
        }
 
        String licenseLoadPic = entity.getLicenseLoadPic();
        if (licenseLoadPic != null) {
            stmt.bindString(45, licenseLoadPic);
        }
 
        String openingAccountLicenseLoadPic = entity.getOpeningAccountLicenseLoadPic();
        if (openingAccountLicenseLoadPic != null) {
            stmt.bindString(46, openingAccountLicenseLoadPic);
        }
 
        String letterOfAuthPicLoadPic = entity.getLetterOfAuthPicLoadPic();
        if (letterOfAuthPicLoadPic != null) {
            stmt.bindString(47, letterOfAuthPicLoadPic);
        }
 
        String merchant_id = entity.getMerchant_id();
        if (merchant_id != null) {
            stmt.bindString(48, merchant_id);
        }
 
        String member_id = entity.getMember_id();
        if (member_id != null) {
            stmt.bindString(49, member_id);
        }
 
        String merchant_name = entity.getMerchant_name();
        if (merchant_name != null) {
            stmt.bindString(50, merchant_name);
        }
 
        String store_id = entity.getStore_id();
        if (store_id != null) {
            stmt.bindString(51, store_id);
        }
 
        String incoming_parts_id = entity.getIncoming_parts_id();
        if (incoming_parts_id != null) {
            stmt.bindString(52, incoming_parts_id);
        }
 
        String merchant_type = entity.getMerchant_type();
        if (merchant_type != null) {
            stmt.bindString(53, merchant_type);
        }
 
        String licensePic = entity.getLicensePic();
        if (licensePic != null) {
            stmt.bindString(54, licensePic);
        }
 
        String cprRegNmCn = entity.getCprRegNmCn();
        if (cprRegNmCn != null) {
            stmt.bindString(55, cprRegNmCn);
        }
 
        String registCode = entity.getRegistCode();
        if (registCode != null) {
            stmt.bindString(56, registCode);
        }
 
        String mccCd = entity.getMccCd();
        if (mccCd != null) {
            stmt.bindString(57, mccCd);
        }
 
        String mcc_name = entity.getMcc_name();
        if (mcc_name != null) {
            stmt.bindString(58, mcc_name);
        }
 
        String identityName = entity.getIdentityName();
        if (identityName != null) {
            stmt.bindString(59, identityName);
        }
 
        String identityTyp = entity.getIdentityTyp();
        if (identityTyp != null) {
            stmt.bindString(60, identityTyp);
        }
 
        String identityNo = entity.getIdentityNo();
        if (identityNo != null) {
            stmt.bindString(61, identityNo);
        }
 
        String haveLicenceNo = entity.getHaveLicenceNo();
        if (haveLicenceNo != null) {
            stmt.bindString(62, haveLicenceNo);
        }
        stmt.bindLong(63, entity.getIsHaveLicence() ? 1L: 0L);
 
        String actTyp = entity.getActTyp();
        if (actTyp != null) {
            stmt.bindString(64, actTyp);
        }
 
        String settleType = entity.getSettleType();
        if (settleType != null) {
            stmt.bindString(65, settleType);
        }
        stmt.bindLong(66, entity.getPeople_type());
 
        String openingAccountLicensePic = entity.getOpeningAccountLicensePic();
        if (openingAccountLicensePic != null) {
            stmt.bindString(67, openingAccountLicensePic);
        }
 
        String letterOfAuthPic = entity.getLetterOfAuthPic();
        if (letterOfAuthPic != null) {
            stmt.bindString(68, letterOfAuthPic);
        }
 
        String settlePersonIdcardPositive = entity.getSettlePersonIdcardPositive();
        if (settlePersonIdcardPositive != null) {
            stmt.bindString(69, settlePersonIdcardPositive);
        }
 
        String settlePersonIdcardOpposite = entity.getSettlePersonIdcardOpposite();
        if (settlePersonIdcardOpposite != null) {
            stmt.bindString(70, settlePersonIdcardOpposite);
        }
        stmt.bindLong(71, entity.getIsBusinessComplete() ? 1L: 0L);
        stmt.bindLong(72, entity.getIsMerchantComplete() ? 1L: 0L);
        stmt.bindLong(73, entity.getIsSettlementComplete() ? 1L: 0L);
        stmt.bindLong(74, entity.getIsRateComplete() ? 1L: 0L);
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, InComing entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String cate_id = entity.getCate_id();
        if (cate_id != null) {
            stmt.bindString(2, cate_id);
        }
 
        String cate_name = entity.getCate_name();
        if (cate_name != null) {
            stmt.bindString(3, cate_name);
        }
 
        String mecDisNm = entity.getMecDisNm();
        if (mecDisNm != null) {
            stmt.bindString(4, mecDisNm);
        }
 
        String mblNo = entity.getMblNo();
        if (mblNo != null) {
            stmt.bindString(5, mblNo);
        }
 
        String wxQrcodeList = entity.getWxQrcodeList();
        if (wxQrcodeList != null) {
            stmt.bindString(6, wxQrcodeList);
        }
 
        String aliQrcodeList = entity.getAliQrcodeList();
        if (aliQrcodeList != null) {
            stmt.bindString(7, aliQrcodeList);
        }
 
        String thousandQrcodeList = entity.getThousandQrcodeList();
        if (thousandQrcodeList != null) {
            stmt.bindString(8, thousandQrcodeList);
        }
 
        String highestQrcodeList = entity.getHighestQrcodeList();
        if (highestQrcodeList != null) {
            stmt.bindString(9, highestQrcodeList);
        }
 
        String cprRegAddr = entity.getCprRegAddr();
        if (cprRegAddr != null) {
            stmt.bindString(10, cprRegAddr);
        }
 
        String regProvCd = entity.getRegProvCd();
        if (regProvCd != null) {
            stmt.bindString(11, regProvCd);
        }
 
        String regCityCd = entity.getRegCityCd();
        if (regCityCd != null) {
            stmt.bindString(12, regCityCd);
        }
 
        String regDistCd = entity.getRegDistCd();
        if (regDistCd != null) {
            stmt.bindString(13, regDistCd);
        }
 
        String actNm = entity.getActNm();
        if (actNm != null) {
            stmt.bindString(14, actNm);
        }
 
        String stmManIdNo = entity.getStmManIdNo();
        if (stmManIdNo != null) {
            stmt.bindString(15, stmManIdNo);
        }
 
        String actNo = entity.getActNo();
        if (actNo != null) {
            stmt.bindString(16, actNo);
        }
 
        String lbnkNo = entity.getLbnkNo();
        if (lbnkNo != null) {
            stmt.bindString(17, lbnkNo);
        }
 
        String lbnkNm = entity.getLbnkNm();
        if (lbnkNm != null) {
            stmt.bindString(18, lbnkNm);
        }
 
        String legalPersonidPositivePic = entity.getLegalPersonidPositivePic();
        if (legalPersonidPositivePic != null) {
            stmt.bindString(19, legalPersonidPositivePic);
        }
 
        String legalPersonidOppositePic = entity.getLegalPersonidOppositePic();
        if (legalPersonidOppositePic != null) {
            stmt.bindString(20, legalPersonidOppositePic);
        }
 
        String bankCardPositivePic = entity.getBankCardPositivePic();
        if (bankCardPositivePic != null) {
            stmt.bindString(21, bankCardPositivePic);
        }
 
        String bankCardOppositePic = entity.getBankCardOppositePic();
        if (bankCardOppositePic != null) {
            stmt.bindString(22, bankCardOppositePic);
        }
 
        String storePic = entity.getStorePic();
        if (storePic != null) {
            stmt.bindString(23, storePic);
        }
 
        String businessPlacePic = entity.getBusinessPlacePic();
        if (businessPlacePic != null) {
            stmt.bindString(24, businessPlacePic);
        }
 
        String insideScenePic = entity.getInsideScenePic();
        if (insideScenePic != null) {
            stmt.bindString(25, insideScenePic);
        }
 
        String regProv = entity.getRegProv();
        if (regProv != null) {
            stmt.bindString(26, regProv);
        }
 
        String regCity = entity.getRegCity();
        if (regCity != null) {
            stmt.bindString(27, regCity);
        }
 
        String regDist = entity.getRegDist();
        if (regDist != null) {
            stmt.bindString(28, regDist);
        }
 
        String legalPersonidPositiveLoadPic = entity.getLegalPersonidPositiveLoadPic();
        if (legalPersonidPositiveLoadPic != null) {
            stmt.bindString(29, legalPersonidPositiveLoadPic);
        }
 
        String legalPersonidOppositeLoadPic = entity.getLegalPersonidOppositeLoadPic();
        if (legalPersonidOppositeLoadPic != null) {
            stmt.bindString(30, legalPersonidOppositeLoadPic);
        }
 
        String bankCardPositiveLoadPic = entity.getBankCardPositiveLoadPic();
        if (bankCardPositiveLoadPic != null) {
            stmt.bindString(31, bankCardPositiveLoadPic);
        }
 
        String bankCardOppositeLoadPic = entity.getBankCardOppositeLoadPic();
        if (bankCardOppositeLoadPic != null) {
            stmt.bindString(32, bankCardOppositeLoadPic);
        }
 
        String storeLoadPic = entity.getStoreLoadPic();
        if (storeLoadPic != null) {
            stmt.bindString(33, storeLoadPic);
        }
 
        String businessPlaceLoadPic = entity.getBusinessPlaceLoadPic();
        if (businessPlaceLoadPic != null) {
            stmt.bindString(34, businessPlaceLoadPic);
        }
 
        String insideSceneLoadPic = entity.getInsideSceneLoadPic();
        if (insideSceneLoadPic != null) {
            stmt.bindString(35, insideSceneLoadPic);
        }
 
        String settlePersonIdcardLoadPositive = entity.getSettlePersonIdcardLoadPositive();
        if (settlePersonIdcardLoadPositive != null) {
            stmt.bindString(36, settlePersonIdcardLoadPositive);
        }
 
        String settlePersonIdcardLoadOpposite = entity.getSettlePersonIdcardLoadOpposite();
        if (settlePersonIdcardLoadOpposite != null) {
            stmt.bindString(37, settlePersonIdcardLoadOpposite);
        }
 
        String bankCode = entity.getBankCode();
        if (bankCode != null) {
            stmt.bindString(38, bankCode);
        }
 
        String bankName = entity.getBankName();
        if (bankName != null) {
            stmt.bindString(39, bankName);
        }
 
        String bankCityCode = entity.getBankCityCode();
        if (bankCityCode != null) {
            stmt.bindString(40, bankCityCode);
        }
 
        String bankCityName = entity.getBankCityName();
        if (bankCityName != null) {
            stmt.bindString(41, bankCityName);
        }
 
        String createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindString(42, createTime);
        }
        stmt.bindLong(43, entity.getStatus());
 
        String failure_msg = entity.getFailure_msg();
        if (failure_msg != null) {
            stmt.bindString(44, failure_msg);
        }
 
        String licenseLoadPic = entity.getLicenseLoadPic();
        if (licenseLoadPic != null) {
            stmt.bindString(45, licenseLoadPic);
        }
 
        String openingAccountLicenseLoadPic = entity.getOpeningAccountLicenseLoadPic();
        if (openingAccountLicenseLoadPic != null) {
            stmt.bindString(46, openingAccountLicenseLoadPic);
        }
 
        String letterOfAuthPicLoadPic = entity.getLetterOfAuthPicLoadPic();
        if (letterOfAuthPicLoadPic != null) {
            stmt.bindString(47, letterOfAuthPicLoadPic);
        }
 
        String merchant_id = entity.getMerchant_id();
        if (merchant_id != null) {
            stmt.bindString(48, merchant_id);
        }
 
        String member_id = entity.getMember_id();
        if (member_id != null) {
            stmt.bindString(49, member_id);
        }
 
        String merchant_name = entity.getMerchant_name();
        if (merchant_name != null) {
            stmt.bindString(50, merchant_name);
        }
 
        String store_id = entity.getStore_id();
        if (store_id != null) {
            stmt.bindString(51, store_id);
        }
 
        String incoming_parts_id = entity.getIncoming_parts_id();
        if (incoming_parts_id != null) {
            stmt.bindString(52, incoming_parts_id);
        }
 
        String merchant_type = entity.getMerchant_type();
        if (merchant_type != null) {
            stmt.bindString(53, merchant_type);
        }
 
        String licensePic = entity.getLicensePic();
        if (licensePic != null) {
            stmt.bindString(54, licensePic);
        }
 
        String cprRegNmCn = entity.getCprRegNmCn();
        if (cprRegNmCn != null) {
            stmt.bindString(55, cprRegNmCn);
        }
 
        String registCode = entity.getRegistCode();
        if (registCode != null) {
            stmt.bindString(56, registCode);
        }
 
        String mccCd = entity.getMccCd();
        if (mccCd != null) {
            stmt.bindString(57, mccCd);
        }
 
        String mcc_name = entity.getMcc_name();
        if (mcc_name != null) {
            stmt.bindString(58, mcc_name);
        }
 
        String identityName = entity.getIdentityName();
        if (identityName != null) {
            stmt.bindString(59, identityName);
        }
 
        String identityTyp = entity.getIdentityTyp();
        if (identityTyp != null) {
            stmt.bindString(60, identityTyp);
        }
 
        String identityNo = entity.getIdentityNo();
        if (identityNo != null) {
            stmt.bindString(61, identityNo);
        }
 
        String haveLicenceNo = entity.getHaveLicenceNo();
        if (haveLicenceNo != null) {
            stmt.bindString(62, haveLicenceNo);
        }
        stmt.bindLong(63, entity.getIsHaveLicence() ? 1L: 0L);
 
        String actTyp = entity.getActTyp();
        if (actTyp != null) {
            stmt.bindString(64, actTyp);
        }
 
        String settleType = entity.getSettleType();
        if (settleType != null) {
            stmt.bindString(65, settleType);
        }
        stmt.bindLong(66, entity.getPeople_type());
 
        String openingAccountLicensePic = entity.getOpeningAccountLicensePic();
        if (openingAccountLicensePic != null) {
            stmt.bindString(67, openingAccountLicensePic);
        }
 
        String letterOfAuthPic = entity.getLetterOfAuthPic();
        if (letterOfAuthPic != null) {
            stmt.bindString(68, letterOfAuthPic);
        }
 
        String settlePersonIdcardPositive = entity.getSettlePersonIdcardPositive();
        if (settlePersonIdcardPositive != null) {
            stmt.bindString(69, settlePersonIdcardPositive);
        }
 
        String settlePersonIdcardOpposite = entity.getSettlePersonIdcardOpposite();
        if (settlePersonIdcardOpposite != null) {
            stmt.bindString(70, settlePersonIdcardOpposite);
        }
        stmt.bindLong(71, entity.getIsBusinessComplete() ? 1L: 0L);
        stmt.bindLong(72, entity.getIsMerchantComplete() ? 1L: 0L);
        stmt.bindLong(73, entity.getIsSettlementComplete() ? 1L: 0L);
        stmt.bindLong(74, entity.getIsRateComplete() ? 1L: 0L);
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public InComing readEntity(Cursor cursor, int offset) {
        InComing entity = new InComing( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // cate_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // cate_name
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // mecDisNm
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // mblNo
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // wxQrcodeList
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // aliQrcodeList
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // thousandQrcodeList
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // highestQrcodeList
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // cprRegAddr
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // regProvCd
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // regCityCd
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // regDistCd
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // actNm
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // stmManIdNo
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // actNo
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // lbnkNo
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // lbnkNm
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // legalPersonidPositivePic
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // legalPersonidOppositePic
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // bankCardPositivePic
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // bankCardOppositePic
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // storePic
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // businessPlacePic
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // insideScenePic
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // regProv
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // regCity
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // regDist
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // legalPersonidPositiveLoadPic
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // legalPersonidOppositeLoadPic
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // bankCardPositiveLoadPic
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // bankCardOppositeLoadPic
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // storeLoadPic
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // businessPlaceLoadPic
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // insideSceneLoadPic
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // settlePersonIdcardLoadPositive
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // settlePersonIdcardLoadOpposite
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // bankCode
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // bankName
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // bankCityCode
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // bankCityName
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // createTime
            cursor.getInt(offset + 42), // status
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // failure_msg
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // licenseLoadPic
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // openingAccountLicenseLoadPic
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // letterOfAuthPicLoadPic
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // merchant_id
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // member_id
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // merchant_name
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // store_id
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // incoming_parts_id
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // merchant_type
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // licensePic
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // cprRegNmCn
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // registCode
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // mccCd
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // mcc_name
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // identityName
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // identityTyp
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // identityNo
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // haveLicenceNo
            cursor.getShort(offset + 62) != 0, // isHaveLicence
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // actTyp
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // settleType
            cursor.getInt(offset + 65), // people_type
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // openingAccountLicensePic
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // letterOfAuthPic
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // settlePersonIdcardPositive
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // settlePersonIdcardOpposite
            cursor.getShort(offset + 70) != 0, // isBusinessComplete
            cursor.getShort(offset + 71) != 0, // isMerchantComplete
            cursor.getShort(offset + 72) != 0, // isSettlementComplete
            cursor.getShort(offset + 73) != 0 // isRateComplete
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, InComing entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setCate_id(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setCate_name(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMecDisNm(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setMblNo(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setWxQrcodeList(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setAliQrcodeList(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setThousandQrcodeList(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setHighestQrcodeList(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setCprRegAddr(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setRegProvCd(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setRegCityCd(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setRegDistCd(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setActNm(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setStmManIdNo(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setActNo(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setLbnkNo(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setLbnkNm(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setLegalPersonidPositivePic(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setLegalPersonidOppositePic(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setBankCardPositivePic(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setBankCardOppositePic(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setStorePic(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setBusinessPlacePic(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setInsideScenePic(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setRegProv(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setRegCity(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setRegDist(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setLegalPersonidPositiveLoadPic(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setLegalPersonidOppositeLoadPic(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setBankCardPositiveLoadPic(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setBankCardOppositeLoadPic(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setStoreLoadPic(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setBusinessPlaceLoadPic(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setInsideSceneLoadPic(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setSettlePersonIdcardLoadPositive(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setSettlePersonIdcardLoadOpposite(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setBankCode(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setBankName(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setBankCityCode(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setBankCityName(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setCreateTime(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setStatus(cursor.getInt(offset + 42));
        entity.setFailure_msg(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setLicenseLoadPic(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setOpeningAccountLicenseLoadPic(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setLetterOfAuthPicLoadPic(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setMerchant_id(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setMember_id(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setMerchant_name(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setStore_id(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setIncoming_parts_id(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setMerchant_type(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setLicensePic(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setCprRegNmCn(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setRegistCode(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setMccCd(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setMcc_name(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setIdentityName(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setIdentityTyp(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setIdentityNo(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setHaveLicenceNo(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setIsHaveLicence(cursor.getShort(offset + 62) != 0);
        entity.setActTyp(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setSettleType(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setPeople_type(cursor.getInt(offset + 65));
        entity.setOpeningAccountLicensePic(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setLetterOfAuthPic(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setSettlePersonIdcardPositive(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setSettlePersonIdcardOpposite(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setIsBusinessComplete(cursor.getShort(offset + 70) != 0);
        entity.setIsMerchantComplete(cursor.getShort(offset + 71) != 0);
        entity.setIsSettlementComplete(cursor.getShort(offset + 72) != 0);
        entity.setIsRateComplete(cursor.getShort(offset + 73) != 0);
     }
    
    @Override
    protected final Long updateKeyAfterInsert(InComing entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(InComing entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(InComing entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
